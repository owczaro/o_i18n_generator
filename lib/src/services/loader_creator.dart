import 'dart:convert';
import 'dart:io';

import 'package:dart_style/dart_style.dart';
import 'package:path/path.dart' as path;

import '../../o_i18n_generator.dart';
import '../converters/language_tag_to_var.dart';
import '../models/command_config.dart';
import '../utls/file_utils.dart';

/// A converter, which transforms list of languageTags to [BasicLocaleLoader]
class LoaderCreator {
  /// A list containing language tags which has translations.
  final List<String> availableLanguages;

  /// Creates an instance of [LoaderCreator]
  LoaderCreator(this.availableLanguages) {
    var content = 'import \'package:o_i18n_generator/o_i18n_generator.dart\';\n'
        'import \'${CommandConfig.defaultLanguage}.g.dart\';\n';

    for (var languageTag in availableLanguages) {
      content += 'import \'$languageTag.g.dart\';\n';
    }
    content += '\n///////////////////////////////////////////////////////////\n'
        '///////////// AUTOGENERATED FILE. DO NOT MODIFY ///////////\n'
        '///////////////////////////////////////////////////////////\n\n';
    content += 'class LocaleLoader extends BasicLocaleLoader {\n'
        '@override\n'
        'List<String> get languageTags => ${jsonEncode([
      ...[CommandConfig.defaultLanguage],
      ...availableLanguages,
    ])};\n'
        '@override\n'
        'Map<String, dynamic> loadTranslations(String languageTag) {'
        'switch (languageTag) {';
    for (var languageTag in availableLanguages) {
      content += 'case \'$languageTag\': '
          'return ${LanguageTagToVar.convert(languageTag)};\n';
    }
    content += 'default: '
        'return ${LanguageTagToVar.convert(CommandConfig.defaultLanguage)};\n';
    content += '}}}';

    var formatter = DartFormatter();
    try {
      content = formatter.format(content);
      _outputFile.writeAsStringSync(content);
    } on FormatterException catch (e) {
      print(e);
    }
  }

  File get _outputFile => openFile(
      path.normalize('${CommandConfig.targetDir}/locale_loader.g.dart'));
}
